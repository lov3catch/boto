<?php

declare(strict_types=1);

namespace App\Tests\Botonarioum\Bots\Handlers\Pipes\Moderator\Checkers\EditCheckers;

use App\Botonarioum\Bots\Handlers\Pipes\Moderator\Checkers\EditCheckers\LinkChecker;
use App\Botonarioum\Bots\Handlers\Pipes\Moderator\Exceptions\LinkException;
use PHPUnit\Framework\TestCase;

class LinkCheckerTest extends TestCase
{
    /**
     * @var LinkChecker
     */
    private $checker;

    protected function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->checker = new LinkChecker();
    }

    /**
     * @dataProvider linksProvider
     * @param string $link
     */
    public function testCheckShouldBeException(string $link)
    {
        $this->assertTrue($this->checker->doCheck($link));
    }

    public function linksProvider()
    {
        yield ['http://example.com'];
        yield ['https://example.com'];
        yield ['https://www.example.com'];
        yield ['www.example.com'];
        yield ['kvartirka.net.ua'];
        yield ['24home.com.ua'];
        yield ['54.3.se'];
        yield ['340.ком'];
        yield ['Google.com'];
        yield ['Whatsapp.com'];
        yield ['Facebook.com'];
        yield ['YouTube.com'];
    }

    /**
     * @dataProvider notLinksProvider
     * @param string $text
     */
    public function testCheckShouldBeOk(string $text)
    {
        $this->assertFalse($this->checker->doCheck($text));
    }

    public function notLinksProvider()
    {
        yield ['Hi!'];
        yield ['Привет, как дела?'];
        yield ['Объявление о покупке гаража'];
        yield ['Номер: 09-08-98'];
        yield ['Тестовая строка (еще одна)'];
        yield ['Два кофе, пожалуйста. И один чай.'];
    }
}
